	subroutine bytorder (a,iflag)
	implicit integer*4 (i-n)

# reverse byteorder in a 4-byte word: 1234 -> 4321
#
# Note: while variable "a" is an integer, the ordering will work on
# floats too.
#
# iflag: when to swap bytes on a(1): the bit flags
#        = 0 do not flip bytes on a(1)
#        = 1 flip bytes on a(1) before others (for read)
#        = 2 flip bytes on a(1) after  others (for write)
#
# Roger N. Clark  02/18/2001

	include "../common/iomap1"

	integer*2       chkbit, ibit, ibit0, ibit1

	integer*4 a(384), iflag


	if (iflag == 1) call swab4order(a(1))  # swap byte order on bitflags

	ibit0 = 0
	ibit1 = 1
        if (chkbit(a(1),ibit0) == 0 & chkbit(icflag,ibit1) == 1) {     # 1st text data record

		call swab4order(a(13))  # swap byte order on text pointer
		call swab4order(a(14))  # swap byte order on text size
                write (*,*) 'DEBUG: byteorder is 1st text record'
		if (iflag == 2) call swab4order(a(1))  # swap byte order on bitflags
                return

        } else  if (chkbit(a(1),ibit0) == 1 & chkbit(icflag,ibit1) == 1) {  # contin text data record

		if (iflag == 2) call swab4order(a(1))  # swap byte order on bitflags
                write (*,*) 'DEBUG: byteorder is continuation text record'
                return

        } else  if (chkbit(a(1),ibit0) == 0 & chkbit(icflag,ibit1) == 0) {  # 1st data record

                write (*,*) 'DEBUG: byteorder is 1st data record'

		# loop number determined by hand from include: iomap1

		do i = 14, 29 {
			call swab4order(a(i))
		}
		do i = 117, 384 {
			call swab4order(a(i))
		}

        } else  if (chkbit(a(1),ibit0) == 1 & chkbit(icflag,ibit1) == 0) {  # 1st data record

                write (*,*) 'DEBUG: byteorder is continuation data  record'
		do i = 2, 384 {
			call swab4order(a(i))
		}

        } 

	if (iflag == 2) call swab4order(a(1))  # swap byte order on bitflags

	return
	end
